# This program will iterate through files in a directory and calculate the md5 sum
# of each executable file before sending to the virus total api to retrieve information
# If there is an error checking a sample, the script will write the filename to a
# textfile called "jsonErrors.txt" 
# Create a directory called "newSamples" to 
# Reference: https://www.youtube.com/watch?v=EgLNmG2LzTI
# Reference: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet

import shutil
import requests
import subprocess
import os
import sys
import hashlib
from time import sleep
from io import StringIO

exe = 0
unknown = 0
total = 0

# change this to the active working directory (where the malware samples are)
directory = os.fsencode("/home/") # CHANGE ME
os.mkdir('newSamples')
destination = 'newSamples' # files not found in VirusTotal db move to this directory

with open('jsonErrors.txt', 'w') as outfile:
	for file in os.listdir(directory):
		total = total + 1
		filename = os.fsdecode(file)
		out = subprocess.Popen(['file', file],
			stdout=subprocess.PIPE,
			stderr=subprocess.STDOUT)

		stdout,stderr = out.communicate()

		if b'executable' in stdout:
			exe += 1
			# get md5sum of file
			
			sha256_returned = hashlib.sha256(open(filename,'rb').read()).hexdigest()
			print(sha256_returned)
			
			# check virustotal
			params = {'apikey': 'INSERT-API-KEY-HERE', 'resource': sha256_returned}
			headers = {
				"Accept-Encoding": "gzip, deflate",
			}

			response = requests.get('https://www.virustotal.com/vtapi/v2/file/report', params=params, headers=headers)
			
			json_response = ''
			if 'json' in response.headers.get('Content-Type'):
				json_response = response.json()
				print(json_response)

				if json_response['response_code'] == 0 and b'Python' not in stdout:
					print("File not found in VT db:", filename)
					print("Moving to file not found directory...")
					shutil.move(filename, destination)
				elif json_response['response_code'] == 1:
					md5 = json_response["md5"]
					sha256 = json_response["sha256"]
					sha1 = json_response["sha1"]
					scan_date = json_response["scan_date"]
					positives = json_response["positives"]
					total = json_response["total"]

					md = """
					# Scan Results for {filename}

					### MD5: {md5}
					### SHA256: {sha256}
					### SHA1: {sha1}

					""".format(filename=filename, md5=md5, sha256=sha256, sha1=sha1)

					scanners = json_response["scans"].keys()
					md += """

					| Scanner        | Detected           | Resulted  |
					| ------------- |:-------------:| -----:|
					"""
					for scanner in scanners:
						detected = json_response["scans"][scanner]["detected"]
						result = json_response["scans"][scanner]["result"]
						md += """|{scanner}| {detected}| {result}|\n""".format(scanner=scanner, detected=detected, result=result)

					with open("Results.md", "a") as fileObject:
						fileObject.write(md)
					
					# create 1 minute delay for virus total api
					if exe % 3 == 0:
						print("sleeping for 60 seconds...")
						sleep(65)
				else:
					unknown += 1
					#print(stdout)
			else:
				print('Response not in JSON format. Writing filename to jsonErrors.txt')
				outfile.write(filename + " did not return json from virus total api." + "\n")
				if exe % 3 == 0:
					print("sleeping for 60 seconds...")
					sleep(65)

print("Executables found:", exe)
print("Non-executable files found:", unknown)
print("Total files checked:", total)		





















